cmake_minimum_required(VERSION 3.16)
project(icons VERSION 1.0 LANGUAGES C CXX)

#set(CMAKE_INCLUDE_CURRENT_DIR ON)
include(../../variables.cmake)

# install macOS files for a correct bundle
install(FILES qt.conf DESTINATION ${INSTALLROOT}/${DATADIR})
install(FILES ../../resources/icons/qlcplus.icns DESTINATION ${INSTALLROOT}/${DATADIR})

if(qmlui)
    install(FILES Info.plist.qmlui DESTINATION ${INSTALLROOT}/Info.plist)
else()
    install(FILES Info.plist DESTINATION ${INSTALLROOT})
endif()
install(CODE "execute_process(COMMAND sed -i -e \"s/__QLC_VERSION__/${APPVERSION}/g\" ${INSTALLROOT}/Info.plist)")


set(APPLE_CODESIGN_ENTITLEMENTS "qlcplus.entitlements")

# Starting with arm64 macOS Apple will require ad-hoc code signatures,
# which can be generated by setting the identity to a single dash (-).
# These only include a checksum for verifying integrity, not an actual
# signature.
if(NOT APPLE_CODESIGN_IDENTITY)
    set(APPLE_CODESIGN_IDENTITY -)
endif()

# install support libraries
set(FFTW_LIBNAME "libfftw3.3.dylib")
set(OGG_LIBNAME "libogg.0.dylib")
set(FLAC_LIBNAME "libFLAC.12.dylib")
set(OPUS_LIBNAME "libopus.0.dylib")
set(MPG123_LIBNAME "libmpg123.0.dylib")
set(LAME_LIBNAME "libmp3lame.0.dylib")
set(VORBIS_LIBNAME "libvorbis.0.dylib")
set(VORBISENC_LIBNAME "libvorbisenc.2.dylib")

install(FILES ${FFTW3_LIBDIR}/${FFTW_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${LIBFTDI1_libftdi1_LIBDIR}/libftdi1.2.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${LIBFTDI1_libftdi1_LIBDIR}/libftdi1.2.5.0.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${LIBUSB1_LIBDIR}/libusb-1.0.0.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${MAD_LIBDIR}/libmad.0.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${SNDFILE_LIBDIR}/libsndfile.1.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${SNDFILE_LIBDIR}/libsndfile.1.0.37.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})

pkg_check_modules(FLAC IMPORTED_TARGET flac)
pkg_check_modules(OGG IMPORTED_TARGET ogg)
pkg_check_modules(OPUS IMPORTED_TARGET opus)
pkg_check_modules(MPG123 IMPORTED_TARGET libmpg123)
#pkg_check_modules(LAME IMPORTED_TARGET lame) # lame doesn't have a pkg-config file...well done
pkg_check_modules(VORBIS IMPORTED_TARGET vorbis)
pkg_check_modules(VORBISENC IMPORTED_TARGET vorbisenc)

install(FILES ${OGG_LIBDIR}/${OGG_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${FLAC_LIBDIR}/${FLAC_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${OPUS_LIBDIR}/${OPUS_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${MPG123_LIBDIR}/${MPG123_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${VORBIS_LIBDIR}/${VORBIS_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
install(FILES ${VORBISENC_LIBDIR}/${VORBISENC_LIBNAME} DESTINATION ${INSTALLROOT}/${LIBSDIR})
# this is ugly, thanks to lame developers
if($ENV{USER} STREQUAL "runner")
    install(FILES /usr/local/Cellar/lame/3.100/lib/libmp3lame.0.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
else()
    install(FILES /opt/homebrew/Cellar/lame/3.100/lib/libmp3lame.0.dylib DESTINATION ${INSTALLROOT}/${LIBSDIR})
endif()

# fix dylib lookup paths
install(CODE "execute_process(COMMAND install_name_tool -change 
        /opt/homebrew/opt/fftw/lib/${FFTW_LIBNAME}
        @executable_path/../Frameworks/${FFTW_LIBNAME} 
        ${INSTALLROOT}/${BINDIR}/qlcplus)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        /opt/homebrew/opt/fftw/lib/${FFTW_LIBNAME}
        @executable_path/../Frameworks/${FFTW_LIBNAME} 
        ${INSTALLROOT}/${BINDIR}/qlcplus-fixtureeditor)")

install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/libogg/lib/${OGG_LIBNAME}
        @executable_path/../Frameworks/${OGG_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/libvorbis/lib/${VORBISENC_LIBNAME}
        @executable_path/../Frameworks/${VORBISENC_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/flac/lib/${FLAC_LIBNAME}
        @executable_path/../Frameworks/${FLAC_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/opus/lib/${OPUS_LIBNAME}
        @executable_path/../Frameworks/${OPUS_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/mpg123/lib/${MPG123_LIBNAME}
        @executable_path/../Frameworks/${MPG123_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/lame/lib/${LAME_LIBNAME}
        @executable_path/../Frameworks/${LAME_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
install(CODE "execute_process(COMMAND install_name_tool -change 
        @loader_path/../../../../opt/libvorbis/lib/${VORBIS_LIBNAME}
        @executable_path/../Frameworks/${VORBIS_LIBNAME} 
        ${INSTALLROOT}/${LIBSDIR}/libsndfile.1.dylib)")
